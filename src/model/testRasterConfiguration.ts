/**
 * NeoLoad API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */import { ElementIdDefinition } from './elementIdDefinition';


export interface TestRasterConfiguration { 
    /**
     * The width of the generated graph.
     */
    width?: number;
    /**
     * The height of the generated graph.
     */
    height?: number;
    /**
     * The main title of the generated graph.
     */
    title?: string;
    /**
     * The type of the generated graph. Can be PNG, TIFF or JPEG. Default is PNG.
     */
    rasterType?: TestRasterConfiguration.RasterTypeEnum;
    /**
     * The xAxis label of the generated graph.
     */
    xAxisLabel?: string;
    /**
     * The yAxis label of the generated graph.
     */
    yAxisLabel?: string;
    /**
     * If true the legend is displayed. Default is true.
     */
    legend?: boolean;
    /**
     * If true, display one axis per serie. Default is false.
     */
    multiYAxis?: boolean;
    /**
     * The theme of the graph. Default is TRANSPARENT.
     */
    theme?: TestRasterConfiguration.ThemeEnum;
    /**
     * The list of elements.
     */
    elementIds?: Array<ElementIdDefinition>;
    /**
     * The list of counters.
     */
    counterIds?: Array<string>;
}
export namespace TestRasterConfiguration {
    export type RasterTypeEnum = 'PNG' | 'TIFF' | 'JPEG';
    export const RasterTypeEnum = {
        PNG: 'PNG' as RasterTypeEnum,
        TIFF: 'TIFF' as RasterTypeEnum,
        JPEG: 'JPEG' as RasterTypeEnum
    };
    export type ThemeEnum = 'DARK' | 'LIGHT' | 'TRANSPARENT';
    export const ThemeEnum = {
        DARK: 'DARK' as ThemeEnum,
        LIGHT: 'LIGHT' as ThemeEnum,
        TRANSPARENT: 'TRANSPARENT' as ThemeEnum
    };
}